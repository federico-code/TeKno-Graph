<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="596pt" height="842pt" viewBox="0 0 596 842">
<g enable-background="new">
<clipPath id="cp90">
<path d="M 0 0 L 595.5 0 L 595.5 842.25 L 0 842.25 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp90)">
<path transform="matrix(.75,0,0,.75,0,0)" d="M 0 0 L 794 0 L 794 1123 L 0 1123 Z " fill="#ffffff"/>
</g>
<clipPath id="cp91">
<path d="M 0 0 L 595.5 0 L 595.5 842.25 L 0 842.25 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp91)">
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 72)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 58.927675 63.679384 70.971729 75.78058 82.80098 88.9984 93.90767 97.271167 105.000049 112.7003 116.0137 119.3772 125.10945 128.42285 134.49852 141.51892 146.62857 151.73822 155.10172 162.39406 170.09432 173.40772 181.1366 188.83686 193.74613 197.40303 200.71643 207.73683 215.43709 223.13735 226.45075 229.81424 234.72351 238.03691 243.76917 251.46942 259.1983 266.89857 270.26206 277.9623 281.2757 286.18498 293.88523 301.17756 306.09385 313.25727 317.42204 325.1509 330.06718 337.35954 340.67295 348.3732 355.66557 358.97898 370.6868 377.70719 385.40745 392.6998 396.0132 402.79014 409.19493 416.2153 419.5788 422.9423 429.96269 437.66294 441.02644 448.31877 451.63218 456.39823 464.1271 467.44053 474.4609 477.8244 481.1879 484.5013 492.20158 499.22196 504.3316 509.24089 514.97317 518.28659 526.01547 530.48818 533.8016 538.7108 546.4111">interaction is carried out, and it should therefore be made available to all parts of the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 87.44141)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.0204 62.720659 70.42091 73.78441 77.1479 83.22357 90.107898 95.017169 98.38066 106.10954 113.8098 117.1232 122.03247 129.73273 136.61705 141.52632 144.83972 149.756 157.04834 164.7486 172.44886 175.81235 180.72863 188.02097 191.33437 199.03462 205.91895 210.64917 217.66957 220.98297 228.00337 234.20079 240.39821 247.69055 253.4228 259.15507">application that require data access.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 112.88281)" font-size="14.666667" font-family="ArialMT"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 112.88281)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 101.01399 106.09502 111.304859 114.90451 122.76936 129.7182 133.0316 142.59967 150.85097 154.75835 162.05785 171.71179 178.61035 188.52193 195.95024">private String URI_NEO4J</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 112.88281)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="200.80226 204.45917 207.77257 212.68184 220.3821 223.74559 229.47785 232.79125 239.67557 244.37715 249.28643 254.39608 257.75959 265.45985 273.1601 277.9118 285.20417 288.51759 291.88108 297.61335 300.92677 305.83604 313.5363 320.8286 324.14204 330.2177 337.9466 345.64686 353.3471 360.63948 366.83689 371.74617 375.10966 382.83854">, this attribute is the connection</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 112.88281)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="393.85209 399.41963 404.3289 409.43855 412.80204 420.5023 427.40104 430.71443 434.8792 442.6081 447.71775 451.03114 455.9404 463.64067 470.93299 474.2464 481.94667 489.239 496.9679 504.3962 509.06935 512.38278 520.083 526.96737 531.6976 538.71798 546.4182 553.4386 559.17086 566.4632 570.163 573.47647 580.6185 588.3188">string for the neo4J database. The</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 128.32617)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 53.567537 58.476808 63.586458 66.94995 74.65021 81.54895 84.86235 90.594608 98.29486 106.02374 113.724 117.087497 124.78775 128.10115 135.8014 143.09375 146.40715 150.57193 158.30081 163.41046 175.11829 182.41063 190.11089 193.42429 196.78778 200.15128 206.34119 213.63353 216.94693 222.67919 230.40807 234.32976 237.64316 245.34342 253.0723 256.4358 261.34507 265.26676 270.92744 276.58815 283.88764 293.01918 302.7232 309.35713 316.49916 323.79866 327.72035 335.01985 342.59129 352.29533 360.11 367.252">string should be formed like so: bolt://&#x003c;HOST&#x003e;:&#x003c;PORT&#x003e;</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 128.32617)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="377.86494 388.34187 396.0421 399.4056 405.60304 413.30329 416.6167 419.9802 427.68046 435.3807 438.7442 444.8199 451.70423 456.45594 463.7483 469.48054 472.79396 477.70323 485.40348 492.6958 496.00923 503.70948 509.4417 516.7341 520.0475 527.77639 532.2491 535.5625 540.4718 548.17208 555.4644 558.77786 566.4781 574.207 577.57046">which indicates the use of the bolt</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 143.76758)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.700258 60.573564 68.302448 73.06848 80.79736 86.87303 94.60191 97.96541 101.622318 104.935718 109.844989 117.54524 124.837589 128.15099 135.85124 143.58013 149.14766 154.05693 157.37033 165.07059 172.09099 183.79882 191.09116 194.40456 201.42496 209.12522 216.82547 220.13887 225.04814 232.7484 240.04074 243.35414 251.0544 258.78327 263.8929 268.8022 272.1156 279.81587 287.5161 299.22395 306.9242 314.21656 317.85096 321.55079 324.8642 332.00627 339.7065 346.99885 350.31227 354.78498 362.48524 365.84873">protocol, the host name and the port number. The full</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 143.76758)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="372.5256 381.92909 389.88697 393.57966 396.89308 402.96876 409.98915 417.6894 421.0028 428.70307 435.99543 439.30885 447.03773 454.67353 459.40376 466.42414 469.78764 477.48789 484.7802 492.48048 495.79389 500.70317 508.4034 513.27676 521.0056 528.7059 535.6046 543.3049 546.6183 551.5276 559.22787">URI can be obtained through the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 159.20899)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.700258 62.9926 70.72148 78.149799 82.82291 86.13631 95.153339 102.44568 108.17793 114.76889 119.53493 127.26381 134.96407 138.27747 145.29787 152.99813 160.69838 164.06188 167.42537 173.50104 180.38536 185.29463 188.65813 196.38701 204.08727">neo4J Desktop application.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Arial" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 101.01399 106.09502 111.304859 114.90451 122.76936 129.7182 133.0316 142.59967 149.52704 157.77834 165.07784 174.73178 181.63034 191.54192 198.97023">private String USR_NEO4J</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="203.82225 207.47916 210.79256 215.70183 223.40209 226.76558 232.49784 235.81124 242.69556 247.39714 252.30641 257.41609 260.77958 268.47984 276.18009 280.9318 288.22413 291.53755 297.61323 305.3421 312.90629 317.6365 324.65693 328.02043 335.72068">, this attribute contains</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="344.7663 349.67558 357.37583 364.66816 367.98158 373.5491 378.45838 383.56803 386.93153 394.63179 401.53053 404.84394 409.00874 416.7376 421.84727 425.16065 430.06993 437.77018 445.0625 448.37593 456.07618 462.9605 467.69075 474.71113 482.41139 489.43177 495.164 502.45637 505.76979 513.47006 519.2023 526.4946 531.60427 534.91769 539.8269 547.52719 554.4115 559.3208 562.6342 573.11117 576.4746 579.83816">the string for the database user that will</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 59.06375 64.63129 69.36151 76.38191 83.94609 88.85536 92.21886 99.10318 103.85489 111.14723 114.46063 119.3699 127.07016 134.3625 137.6759 143.75157 151.48046 159.18071 166.88097 174.17331 180.37073 185.28 188.6435 196.37238 204.07263 207.77248 211.08588 218.91484 225.5488 228.8622 236.56246 243.72588 247.91214 254.93254 262.6328 265.9963 270.90559 274.219 279.12828 286.82853 294.12086 297.43428 305.13453 310.8668 318.15916 323.2688 326.58219 329.94569 335.67796">instantiate the connection. By default the user is:</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri" font-style="italic"><tspan y="14.2369799" x="342.91297 350.4486 357.44755 364.96888 372.3972">neo4j</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="375.90388">.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 225.53516)" font-size="14.666667" font-family="Arial" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 225.53516)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 101.01399 106.09502 111.304859 114.90451 122.76936 129.7182 133.0316 140.83205 147.65198 160.9342 168.2337 177.88765 184.78621 194.69779 202.1261">private String PSW_NEO4J</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 225.53516)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="206.97812 210.63503 213.94843 218.8577 226.55796 233.8503 237.1637 244.86396 251.88436 257.6166 263.27723 273.61808 281.34696 286.25608 293.95634 297.2697 304.9986 309.4713 312.78474 317.694 325.39427 332.68659 336 342.07569 349.80458 354.9142 359.8305 367.12287 372.8551 380.55537 388.28425 395.9845 403.68476 407.04826 414.7485">, the password of the corresponding</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 225.53516)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="424.96064 432.6609 438.39314 445.6855 449.3199 453.0197 456.33314 463.4752 471.17546 478.46778 481.7812 489.48146 496.50184 502.23408 507.8947 518.2356 525.9645 530.8736 538.57388 541.88729 547.96298 554.98336 562.6836 565.997 573.69729">user. The password can be</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 240.97657)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 53.732255 60.945817 65.85509 69.16849 76.868747 84.569 87.8824 91.245899 98.94615 102.25955 107.16882 114.86908 122.16142 125.47482 133.17508 140.46743 148.1963 155.62462 160.29773 163.61113 172.62816 179.9205 185.65276 192.24372 197.00975 204.73863 212.43889 215.75229 222.77269 230.47295 238.1732 241.5367 244.90019 250.97586 257.86018 262.76945 266.13294 273.86183 281.56208">set up in the neo4J Desktop application.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 266.41798)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 10.476929 18.177186 21.54068 24.904175 32.196519 35.50992 40.41919 48.119447">while the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 266.41798)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="58.72519 70.433017 77.646579 82.55585 90.2561 97.984989 105.68524">methods</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 266.41798)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="114.730899 121.7513 126.66757 133.95992">are:</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 281.86134)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 281.86134)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 96.097858 103.96271 111.81322 122.73384 126.333499 133.71172 141.57657 148.36785 155.74607 165.08513 169.97269 177.20778 185.07263 192.93749 197.50325">public KnowledgeGraph()</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 281.86134)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="202.06902 205.72592 209.03932 212.40282 218.13507 221.44847 229.17736 236.87761 244.16996 247.48336 255.21224 259.68498 262.99836 267.90763 275.60789 282.9002 286.21363 292.2893 300.0182 307.71846 313.28599 318.19526 323.3049 331.00517 337.20259 341.96864 349.6975 354.55653">, is one of the constructors</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 281.86134)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="363.60215 367.7669 375.4958 380.60545 383.91883 388.8281 396.52836 399.89186 405.62409 408.9375 415.13493 418.4984 425.5188 431.25105 436.98329 440.6831 443.99653 447.6892 452.59849 455.91188 460.6421 467.66249 473.8524 481.1447 486.87696 490.19038 497.89064 505.6195 508.93293 515.9533 520.8624 527.76119 535.4614 547.16928 554.4616 562.02578 566.93508 572.6673">for this class. It takes no arguments,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 297.30274)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.0204 62.720659 70.42091 73.734317 77.09781 81.57054 84.88394 90.95961 97.98001 101.343509 104.707 111.999347 119.6996 123.013 130.0334 135.76566 142.29216 148.02442 151.33782 155.5026 163.23148 168.34113 171.65453 176.5638 184.26406 191.5564 194.8698 202.57006 209.59046 214.3993 221.41971 233.12754 240.3411 245.0928 252.38515 257.24415 262.97639 266.6333 269.94673 277.64698 284.66737 296.37519 303.66755 307.031 313.66499 316.9784 326.38188 334.33976 338.03245">and if called asks for the parameters, namely URI,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 297.30274)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="345.00276 352.703 358.43525 365.7276 370.83726 374.15065 381.17103 388.87129 396.57154 399.88496 407.5852 414.6056 420.33784 425.99848 436.33934 444.0682 448.97734 456.67759 459.99098 467.71986 475.4201 478.73353 483.6428 491.34306 498.63539 501.9488 508.02449 515.75338 523.4536 529.18588 536.91476 540.2782 547.57058 550.884 554.24746 561.9763 568.87509">user and password on the console log.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 312.74415)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 56.4803 60.953035 65.70474 72.997089 78.106739 81.420139 84.78363 92.48389 98.21614 105.508487 110.61813 115.527408 118.8909 126.591159 133.4899 136.8033 141.71257 149.41283 156.70517 160.01857 167.71883 174.73923 179.54808 186.56848 198.2763 205.48987 210.24158 217.53392 222.39292 228.12517 231.78208 235.09548 238.45897 243.36824 246.68164 250.04514 257.7454 263.31294 268.04316 275.06355 282.62773 287.537 290.90049 297.7848 302.5365 309.82884 315.56108 318.87449 323.78376 331.484">After inserting the parameters, it instantiates the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 312.74415)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="342.08979 348.16548 355.89436 363.5946 371.29487 378.58723 384.78465 389.6939 393.0574 400.7863 408.48655 411.79994 419.5288 427.22908 430.54249 435.45176 443.152 450.44435 453.75776 461.458 466.56767 469.93116 476.33595 483.22029 487.972 495.26435 498.57777 505.4621 510.1637 515.073 520.1826 523.54617 531.2464 538.94668 543.69839">connection on the private attribute</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 328.1875)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.700258 60.809907 64.1734 70.64981 77.942157 83.0518 92.51253 99.80487 107.53375 114.96207 119.506259">driverNeo4J.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 353.6289)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 353.6289)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 96.097858 103.96271 111.81322 122.73384 126.333499 133.71172 141.57657 148.36785 155.74607 165.08513 169.97269 177.20778 185.07263 192.93749 197.50325 204.43062 209.51165 214.72148 218.32114 226.18599 233.13483 236.44823 244.31308 249.52292 253.12258 256.90113 260.21455 267.1419 272.22294 277.43278 281.0324 288.89729 295.84614 299.15956 307.02439 312.87113 317.00675 320.7853 324.09873 331.0261 336.10713 341.31697 344.9166 352.78147">public KnowledgeGraph(String uri, String usr, String</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 353.6289)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="363.04368 370.8369 381.6501 389.51496">pwd)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 353.6289)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="394.0807 397.7376 401.05104 404.41453 410.1468 413.4602 421.1891 428.88935 436.1817 439.49513 447.224 451.69673 455.01014 459.9194 467.61967 474.912 478.2254 484.3011 492.02998 499.73023 505.29777 510.20704 515.31668 523.0169 529.21438 533.9804 541.7093 546.819 550.1324 554.2972 562.02609 567.13577 570.44918 575.3584 583.05868 586.4221">, is one of the constructor for this</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 369.0703)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.19742 57.560914 64.581317 70.31357 76.04582 79.74567 83.05907 86.751758 91.661029 94.97443 99.70465 106.72505 112.91496 120.207309 125.93956 129.25296 134.16223 141.86249 149.15483 152.46823 158.5439 166.27278 173.97304 181.6733 188.96564 195.16306 200.07233 203.43582 211.1647 218.86496 222.17836 227.7459 232.65517 237.76482 241.12831 248.82857 255.72731 259.0407 268.44419 276.40208 280.09477 283.75166 287.06507 291.97434 299.6746 306.96693 310.28034 317.9806 323.71284 331.0052">class. It takes the connection string URI, the user</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 369.0703)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="339.42823 346.4486 354.14888 361.84913 365.16255 370.0718 377.77207 385.0644 388.3778 396.07807 403.09846 408.8307 414.49134 424.83219 432.56108 437.47019 445.17045 448.48384 452.64863 460.3775 465.48716 468.80055 473.7098 481.41007 488.7024 492.0158 499.71607 507.00843 514.7373 522.16567 526.83877 530.15219 537.8524 544.73678 549.467 556.48739 564.1876 571.208 576.94027 584.2326 587.546 594.5664">and the password for the neo4J database as</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 384.51173)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.884325 59.585908 64.49518 69.60483 72.96832 80.66858 88.368839 93.120548 100.41289 106.14514 109.844989 113.15839 126.197299 133.89756 141.1899 148.89015 152.20355 155.56705 160.47632 163.78972 167.15322 172.88547 176.19887 182.27454 189.29494 192.65843 196.02193 203.31427 211.01453 214.67144 217.98484 221.34833 226.2576 229.571 232.9345 240.63475 246.20229 250.93251 257.9529 265.5171 270.42637 273.78987 280.6742 285.4259 292.71827 298.4505 301.76393 306.6732 314.37345">attributes. When it is called, it instantiates the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 384.51173)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="324.97917 332.6794 337.78907 341.15257 347.62898 354.92134 360.03099 363.34437 366.70787 374.4081 377.7215 382.63078 390.33103 397.62336 400.93678 408.63703 413.74668 417.11018 423.58659 430.8789 435.98857 445.44929 452.74165 460.47053 467.89884 472.57197 475.88539 482.7697 487.4713 492.38059 497.49024 500.85374 508.554 516.2543 521.006 528.29837 531.95529 535.2687 540.178 547.87826 555.5785">driver in the driverNeo4J attribute, thus</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 399.95314)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 59.06375 62.427248 67.33652 70.70001 77.72041 81.08391 84.4474 90.23691 93.6004 101.30066 108.1994 111.5128 116.42207 124.12233 131.41468 134.72808 140.80374 148.53263 156.23288 163.93314 171.22548 177.4229 182.33217 185.69567 193.42455 201.1248 204.4382 214.91513 218.27863 223.1879 230.88816 234.20156 239.11083 246.81108 254.10343 257.4168 265.11708 272.0014 276.73164 283.752 291.45228 298.47267 304.20494 311.49729">initializing the connection with the database.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 425.39649)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 425.39649)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 96.097858 103.96271 111.81322 122.73384 126.333499 133.71172 141.57657 148.36785 155.74607 165.08513 169.97269 177.20778 185.07263 192.93749 197.50325 204.43062 209.51165 214.72148 218.32114 226.18599 233.13483 236.44823 244.31308 249.52292 253.12258 256.90113 260.21455 267.1419 272.22294 277.43278 281.0324 288.89729 295.84614 299.15956 307.02439 312.87113 317.00675 320.7853 324.09873 331.0261 336.10713 341.31697 344.9166 352.78147">public KnowledgeGraph(String uri, String usr, String</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 425.39649)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="363.04368 370.8369 381.6501 389.51496 393.29353 396.60694 403.5343 408.61534 413.82518 417.4248 425.28968 432.23854 435.55195 442.28608 454.2086 457.80824 465.10774 470.95448 478.83363 486.6985 491.70063 497.83363 505.21186">pwd, String xml_source)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 425.39649)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="509.77763 513.4345 516.7479 521.6572 529.3575 532.72097 538.4532 541.7666 545.1301 550.86239 554.1758 561.19619 568.8964 576.6253 581.53457 589.2348 596.52719">, this is another</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 440.8379)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.07567 61.80455 69.50481 75.07234 79.98161 85.09126 92.79152 98.98894 103.754978 111.48386 116.593509 119.906909 124.071689 131.80057 136.91022 140.22362 145.13289 152.83315 156.19664 161.9289 165.2423 171.43972 174.8032 181.82361 187.55587 193.28812 196.98796 200.30136 203.99405 208.90332 212.21672 215.58022 223.28047 228.848 233.57823 240.59864 248.16281 253.07209 256.43559 263.3199 268.0716 275.36396 281.0962 284.4096 289.31889 297.01914 304.31147 307.62489 313.70057 321.42945 329.1297 336.82997 344.1223 350.31974 355.229 358.5925 366.32139">constructor for this class. It instantiates the connection</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 440.8379)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="377.33503 387.81196 391.17546 396.08473 403.78498 407.0984 412.00767 419.70793 427.00025 430.31367 438.01393 444.89826 449.62849 456.64888 464.34913 471.3695 477.10176 484.3941 487.70753 494.7279 502.42817 510.12843 513.44186 520.4622 528.1625 532.9285 540.6574 552.36526 559.2496 564.1588 567.52236 573.598 580.6184 583.98196 587.34548">with the database and automatically</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 456.2793)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 59.092378 66.11278 73.813037 79.54529 82.85869 90.558948 97.44327 102.17349 109.19389 112.50729 116.98003 121.85333 129.58222 141.29004 144.60344 151.62384 159.3241 162.6375 170.24472 182.77553 188.93717 192.25057 196.7233 200.08679 203.45029 210.74263 214.05603 221.75629 228.77669 234.50894 240.2412 247.53354 255.2338 258.54719 261.91069 269.61094 272.92433 276.2878 283.98808 291.68833 299.38859 304.29786 307.61125 314.63163 320.36387 323.67729 330.4114 335.32069 340.43034 343.79383 351.49409">loads data from an XML file passed in input as String</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 456.2793)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="361.7063 368.05403 379.76185 383.12535 390.42485 396.1571 403.886 411.58625 416.48103 422.67845 429.97077 433.6706 436.984 444.12608 451.82633 455.18983 460.92207 464.23548 470.31117 478.04005 485.7403 491.30784 496.2171 501.32676 509.027 515.2244 519.9905 527.71939 532.829 536.1424 542.2181 549.23849 552.6019 555.96548">xml_source. This constructor calls</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 471.72267)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.0204 62.720659 70.44954 75.35881 83.05907 90.35141 95.46106 98.77446 104.341999 109.07222 115.95654 120.865818 124.22931 130.42673 133.74013 139.93755 143.30104 150.32144 156.0537 161.78595 165.09935 171.17502 178.19542 181.55892 184.92241 192.21475 199.91501 203.22841 210.83563 223.36644 229.25594 234.02198 241.75086 249.13607 256.8363 264.50788 274.9848 278.3483 285.64064 293.34089 300.11787 307.41023 316.65626 321.4651 328.48548 336.18574 343.886 347.80769 351.1211 356.03038 363.73063">another static class called XMLtoKnowledgeGraph; the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 471.72267)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="374.33644 378.50123 386.2301 391.33976 403.04759 409.9319 414.63349 419.54277 422.90626 430.6065 437.50526 440.81867 444.98347 452.71235 457.822 461.13539 466.04466 473.7449 481.03724 484.35066 491.9579 504.4887 510.65034 513.96377 519.696 527.42489 535.1251 540.0199 546.2173 553.50967 556.82308 567.3 570.66348 574.027 577.3905 580.7039 588.4042">formatting for the XML source will be</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 487.16407)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.700258 62.9926 68.72485 74.92227 80.03192 83.39542 91.09567 98.388019 106.08827 109.40167 112.76517 120.46542 123.778827 128.6881 136.38835 139.75185 145.4841 148.7975 154.99492 158.35842 165.37882 171.11107 176.84333">described in this class.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 512.60549)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 512.60549)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.03873 102.91789 106.51755 114.3824 117.6958 121.295459 129.17462 136.40972 144.27457 153.61363 158.50119 165.73628 173.60114 181.46599 188.19298 193.22377 201.10294 213.02545 221.09784 233.90775 240.10517 244.67093 251.5983 256.67933 261.88917 265.48884 273.3537 280.30256 283.61598 289.4627 297.34187 305.2067 310.20884 316.34187 323.72007">public void loadGraphFromXML(String source)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 512.60549)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="328.28584 331.94276 335.25617 340.16545 347.8657 351.2292">, this</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 512.60549)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="360.2748 371.98265 379.1962 384.10548 391.80574 399.5346 407.23487 410.89179 414.2052 418.93544 425.9558 432.14573 439.43806 445.1703 448.4837 455.5041 458.8175 465.55165 470.4609 475.57057 478.93406 486.6343 493.53306 496.84645 500.20994 507.9102 511.22358 514.58706 522.2873 529.98757 537.6878 542.59707 546.25399 549.5674 553.7322 561.46109 566.5707 569.8841 574.79336 582.4936">method, takes a String in input, for the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 528.0469)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 59.092378 65.168048 72.05237 76.96164 80.325138 88.054019 95.75427 99.06767 106.796558 111.26929 114.58269 121.60309 129.30335 132.61675 140.22397 152.75478 158.91641 162.22982 166.70255 170.06604 173.42954 180.72188 184.03528 188.80132 196.5302 199.8436 203.20709 210.93598 217.95638 225.65663 228.97003 236.69892 244.26309 249.02913 256.758 260.0714 264.98069 272.68095 279.97328 283.28669 290.18544 294.99427 302.01466 309.7149 317.41517">location of an XML file to load onto the graph.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 553.49026)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 553.49026)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.03873 102.91789 106.51755 114.3824 117.6958 124.84485 131.579 136.66002 141.54758 148.78267 154.91568 159.9967 166.32265 173.55774 179.69075 184.77178 190.61853 195.1843 202.11167 207.19269 212.40253 216.00218 223.86704 230.81587 234.12928 238.7666 242.36626 245.96591 253.34413 262.99809 270.23316 282.15568 289.53388 293.31245 296.62586 303.55323 308.63429 313.84413 317.4438 325.30867 332.2575 335.57093 339.9862 347.8654 351.46504 359.3299 366.70814 371.91798">public void extractFacts(String fileName, String folder)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 553.49026)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="376.48365">,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 553.49026)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="383.45399 388.36326 396.0635 399.427 405.15925 408.47267 420.18049 427.39405 432.3033 440.00358 447.73246 455.4327 458.7461 465.8164 472.2071 477.11637 481.92524 488.94563 495.14305 500.0523 505.78456 509.09797 516.7982 521.6715 529.4004 532.7639 540.4928 547.39157 550.70498 554.89126 561.9116 568.109 573.0183">this method extracts prolog facts</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 568.9297)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 52.472734 57.34604 65.07492 76.782749 80.096149 85.00542 92.70567 99.99802 103.31142 109.508838 117.20909 122.31874 127.235019 134.52736 142.09154 147.00081 150.31421 156.97679 164.67705 172.34864 182.82556 186.18906 193.4814 201.18166 207.95865 215.25099 218.56439 226.26465 233.28505 239.0173 246.30965 249.62305 255.19058 259.9566 267.6855 272.60176 279.8941 287.59437 290.90779 294.27128 301.97154 305.2849 310.19419 317.89445 325.18678 328.50019 336.20045 343.4928 351.22169 358.65">from the current knowledge base stored in the neo4j</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 568.9297)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="365.47004 373.1703 380.05464 384.78486 391.80525 399.5055 406.52589 412.25813 419.55049 423.2503 426.56373 430.2564 435.16569 438.47908 443.2093 450.22969 456.4196 463.7119 469.44416 472.75758 476.12107 483.82133 487.1347 490.4982 498.19847 505.8987 513.599 518.5083 521.8217 528.8421 532.1555 538.88967 543.79898 548.90859 552.2721 559.97238 566.8711 570.1845 574.3493 582.0782">database. It takes in input a String for</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 584.37307)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 52.90927 60.609529 67.90187 71.21527 78.91553 85.93593 97.64375 104.9361 108.2495 115.97838 120.45111 123.76451 127.07791 131.98719 139.68744 146.97978 150.29319 158.02207 165.72232 170.63159 178.33185 186.0321 190.94138 194.25478 198.72751 202.091 205.4545 212.74684 216.40375 219.71715 226.73755 234.4378 242.13806 245.45146 252.47187 260.17213 267.901 272.81028 280.51054 287.80287 292.9125 296.2259 302.96003 307.86927 312.9789 316.3424 324.04267 330.9414 334.25483 338.41963 346.1485">the name of  the output file, and another String for</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 584.37307)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="354.5716 359.48088 367.18113 374.47346 377.78688 381.95167 389.68055 393.04405 400.7443 408.03663 413.14628 416.45967 419.82316 427.55204 433.6277 440.51203 445.4213 448.7848 456.51368 464.21394 467.52735 472.2934 480.02229 483.3357 493.81263 501.51289 504.87638 511.0738 518.77407 522.08749 526.9967 534.69699 541.9893 545.30276 549.77548 553.1389 556.50247 563.7948 567.1082 577.58517 580.9486 584.31216">the folder location to which the file will</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 599.8164)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.700258 62.9926 66.306 72.03825 78.815158 85.291568 92.58391 100.284168 103.98401 107.29741 114.43947 122.139728 129.43207 132.74547 144.4533 151.66686 156.57613 164.27639 172.00527 179.70552 183.01892 194.72675 201.74715 207.93706 215.2294 220.96166 224.27506 231.29546 234.60886 242.30912 250.00937 257.3017 262.48298 269.11695 272.43037 277.1964 284.9253 288.2387 293.15498 300.36854 305.27784 312.9781 318.08775 325.788 329.10139 336.12178 339.48527 342.84877 346.16218 353.86244 361.5913 369.29158 376.58393">be saved. The method makes a query to return all nodes</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 599.8164)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="385.62953 392.6499 400.35017 408.0504 411.36384 418.6562 426.35646 433.13343 440.42579 446.15803 449.47145 452.83494 460.5352 463.84858 468.75785 476.4581 483.75044 487.06385 491.22865 498.95753 504.06718 515.775 519.08847 526.8173 531.29006 534.60348 539.5127 544.6223 547.98587 555.6861 559.04959 566.2631 571.17239">and edges in the form of triplets</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 615.25588)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 52.444108 59.73645 63.59384 70.492588 74.19243 77.50583 85.206089 92.93497 100.63522 107.92757 115.35588 119.842929 127.13527 134.83553 141.61252 148.90486 153.3919 161.09217 168.82105 176.5213 183.81365 191.24196 195.68607 199.34297 202.65637 207.56565 215.2659 222.55825 230.2585 233.5719 239.76932 246.21707 252.41449 255.77799 259.14149 266.84175 273.74049 277.0539 281.96318 289.66343 294.53675 302.26564 309.96589 316.86463 324.56489 327.87828 334.89866 338.26216">(e.g. node1-edge-node2), then cycling through all</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 615.25588)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="344.93904 352.6679 357.14064 360.45405 365.3633 373.06358 380.3559 392.06373 395.37715 398.74064 403.6499 406.96333 413.16075 418.07704 425.3694 432.25373 437.00544 444.2978 450.03004">of them it creates:</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 640.6992)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="72">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 640.6992)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="96 103.0204 106.3338 114.03406 121.254779 131.7317 135.0451 141.38536 148.40576 154.60318 159.51245 162.82585 170.55474 178.25499 181.76161 189.05396 195.25138 200.16065 204.08234 207.39574 214.68808 222.38834 229.16533 236.45767 240.94472 245.85399 252.48795 260.1882 267.48054 270.79396 277.81434 283.54658 286.86 291.76927 299.4695 306.76185 310.07527 317.7755 322.69178 329.98414 337.6844 341.04789 347.12355 354.00785 358.75956 366.0519 369.70884 373.02226 380.04264 387.7429">a new Fact object: edge-type as the predicate, and</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 640.6992)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="398.75657 403.66584 411.3661 418.65846 421.97187 426.88114 437.222 444.95088 448.26429 455.96455 463.69343 471.39369 478.68605 484.41828 487.7317 491.09519 498.79545 504.5277 507.84114 514.8615 520.59378 523.90719 530.7915 535.55758 543.28646 554.99429">the two nodes ids as atoms</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 666.1406)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="72">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 666.1406)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="96 99.363498 103.83623 107.14963 114.17003 117.48343 125.183689 132.91257 140.61283 147.90517 151.21857 157.29424 165.02312 172.5873 177.31752 184.33792 187.70142 195.40167 201.13393 204.44733 211.46773 214.78113 219.6904 226.32436 234.02462 241.31696 244.63036 249.07447 256.36683 260.2242 267.12297 270.8228 274.13624 281.8365 289.12886 293.98786 299.7201 307.44898 315.14924 319.59333 322.90675 326.27024 331.1795 334.49293 340.69035 345.60664 352.89897 359.7833 364.535 371.82734">if a node contains a type (e.g. person) it creates</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 666.1406)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="380.87294 387.8933 391.20674 398.90699 406.1277 416.6046 419.91804 426.2583 433.2787 439.4761 444.38539 447.6988 455.42768 463.12794 466.63456 473.92689 480.1243 485.03358 488.95527 492.26869 497.17796 503.8119 511.51216 518.8045 522.1179 529.1383 534.87057 538.18399 543.09329 550.7935">a new Fact object: type as the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 681.58206)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="96 103.70026 108.61653 115.908878 123.60913 126.972629 133.0483 139.93262 144.68433 151.97667 155.29007 162.31047 170.01073 177.71099 181.02439 185.93366 193.63391 200.92626 204.23966 211.93991 219.6688 227.36905 234.66139 237.9748 241.33829 249.03855 252.35195 259.37236 265.1046 268.41804 273.3273 281.02757 288.3199 291.6333 298.51765 303.2837 311.01258">predicate and the node id as the atom</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 707.02346)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="72">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 707.02346)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="96 103.0204 106.3338 114.03406 121.254779 131.7317 135.0451 141.38536 148.40576 154.60318 159.51245 162.82585 170.55474 178.25499 181.76161 189.05396 195.25138 200.16065 203.47405 207.63883 215.3677 220.47736 223.79076 231.0831 238.1035 244.30092 252.00118 255.31458 263.01484 270.7437 278.44398 285.73634 289.04975 293.959 301.65928 308.54359 313.45286 316.76625 323.78663 329.51887 335.2511 342.54347 347.6531 352.56239 358.29466 361.60807 372.085 379.78526 383.14875 389.34617">a new Fact object for each node that asserts which</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 707.02346)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="400.3598 403.7233 407.0868 411.8385 419.13087 423.9397 430.96009 434.32359 437.63697 441.00047 446.73274 450.04615 457.06654 462.79878 468.531 476.2599 482.4573 485.8208 492.70515 497.45686 504.7492 512.44949 515.7629 520.52896 528.2578 531.5712 538.5916 541.905 549.6053 557.33419 565.0344 572.3268 575.6402 579.00369">literal is associated to a node id</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 722.4668)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="96 100.44411 107.73645 111.59384 118.492588 122.19243 125.50583 128.86933 132.23282 136.98453 144.27687 149.08573 156.10613 159.46962 166.76912 174.498 178.97074 183.41484 190.84316 198.27147 205.69979 209.35669 212.67009 216.327 224.02725 227.39075 230.75424 234.11774 237.43114 244.05774 250.94207 255.69377 262.9861 268.71839 272.3753 276.8194">(e.g. literal_of(321, &#x2018;bill gates&#x2019;))</tspan></text>
</g>
<clipPath id="cp92">
<path d="M 0 0 L 595.5 0 L 595.5 842.25 L 0 842.25 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp92)">
<path transform="matrix(.75,0,0,.75,72,266.41798)" stroke-width="1.3333334" stroke-linecap="butt" stroke-miterlimit="10" stroke-linejoin="miter" fill="none" stroke="#000000" d="M 58.666669 16.108073 L 112 16.108073 "/>
</g>
</g>
</svg>
