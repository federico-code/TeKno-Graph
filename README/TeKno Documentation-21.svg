<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="596pt" height="842pt" viewBox="0 0 596 842">
<g enable-background="new">
<clipPath id="cp87">
<path d="M 0 0 L 595.5 0 L 595.5 842.25 L 0 842.25 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp87)">
<path transform="matrix(.75,0,0,.75,0,0)" d="M 0 0 L 794 0 L 794 1123 L 0 1123 Z " fill="#ffffff"/>
</g>
<clipPath id="cp88">
<path d="M 0 0 L 595.5 0 L 595.5 842.25 L 0 842.25 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp88)">
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 72)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 72)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 53.875185 63.121217 67.93007 74.95047 82.65073 90.35098 93.66438 100.39853 105.271839 113.00072 124.70854 128.02194 135.62917 148.15998 153.26886 159.40187 162.71527 173.1922 180.89246 184.25595 190.45337 198.15363 201.46703 209.1959 216.89617 224.1885 231.88877 237.62102 240.93442 247.95482 251.26822 258.96849 266.1892 276.66615 279.97956 290.45649 293.81999 301.52024 309.2205 316.89207 327.369 330.6824 335.1265 338.49 346.19026 351.75779 356.488 363.5084 371.07255 375.98185 379.34535 386.22966 391.13896 394.50245 402.2027 409.10145 412.41484 417.3241 425.02436 432.31669 435.6301 441.8275 445.191 452.2114 457.94364 463.67588 466.9893 476.23533 481.04417 488.06455 495.7648 503.46507 511.0723 523.60317 529.7648 536.4989 541.30776 548.3281 560.03598 567.3283">&#x201c;Graph From XML&#x201d; which opens a new window (instantiating the class GraphXMLFrame)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 87.44141)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 58.47693 66.177188 69.54068 75.7381 83.438358 86.751758 93.772159 97.13565 100.499149 108.17073 118.51874 124.25099 127.56439 132.47367 140.17392 147.46627 150.77967 158.47992 164.21218 171.50452 176.61417 179.92757 184.6936 192.42249 195.73589 199.09938 210.8072 218.50746 226.23635 231.346 236.25527 239.56867 246.58907 249.90247 256.8012 261.61006 268.63044 276.3307 284.03096 287.34437 291.81709 296.69038 304.41926 316.12709 319.4405 326.46089 334.16114 337.47456 345.0818 357.6126">which allows the user to import a graph from an XML</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 87.44141)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="367.08766 371.56037 374.92387 378.28736 385.5797">file.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 112.88281)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 6.533615 14.262497 19.372147 22.685547 30.385804 38.114686 43.023958 50.724214 54.037614 61.766496 66.23923 69.55263 74.4619 82.162158 89.4545 95.18675 102.479099 105.792499 113.52138 121.157169 126.06644 129.42993 137.15882 144.85907 150.59133 154.24823 157.56163 160.92513 165.8344 169.1478 172.51129 178.24355 181.55695 189.2572 196.98609 202.71834 208.45059 211.81409 219.51435 222.87784 230.17018 233.48358 238.24962 245.9785 249.2919 255.02416 262.72444 270.01679 276.2142 279.5777 284.12208">For both of these options, it is possible to specify</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 112.88281)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="294.06938 297.43287 301.90559 305.219 315.56703 322.85939 326.1728 336.485 343.50538 351.06956 355.97883 359.29225 364.0583 371.78718 375.1006 381.87757 389.16993 396.87019 404.16255 408.97138 415.8557 420.60743 427.89979 431.2132 438.23359 441.547 449.11845 453.99177 461.72065 465.08415 472.81303 479.71177 483.02516 487.49787 490.86137 494.22486 501.5172 504.83064 510.9063 518.6352 526.19937 530.92959 537.94998 541.3135 549.01376 552.3772 560.07748 566.9762 570.2896 575.19888 582.8991">if we want to generate a Prolog file containing the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 128.32617)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 4.186264 11.206665 17.404084 22.313355 28.045609 31.359009 38.429338 44.820009 49.72928 54.53813 61.558534 67.75595 72.50766 79.8 87.50026 90.81366 95.28639 100.1597 107.88858 119.596408 122.909809 127.81908 135.51934 142.81168 146.12508 153.02382 157.83267 164.85308 172.55333 180.25359">facts extracted from the graph.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 153.76758)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="0 5.8962557 14.605423 22.43454">FACT</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 169.21094)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 7.1420595 14.842316 18.20581 23.938065 27.251465 33.448884 36.812379 43.83278 49.565034 55.297288 58.610689 63.526964 70.819309 78.51956 83.43584 90.72818 96.460437 103.75278 111.316959 116.22623 121.95848 125.27188 132.29228 135.60569 141.33794 144.70143 152.40169 159.30043 162.66393 169.95627 173.26967 180.96993 185.84323 193.57212 196.93561 204.66449 211.56324 214.87664 219.0629 226.0833 232.28072 237.18999 240.8469 244.1603 250.23596 257.96485 265.6651 271.39735 274.76084 280.32838 285.2376 288.6011 296.30137">This class represents a single prolog fact, consisting</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 169.21094)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="306.51356 314.24244 318.71516 322.02857 329.04896 332.36238 340.06263 344.97889 352.27125 359.9715 363.335 369.41065 376.29499 381.0467 388.33906 391.65248 398.67286 406.3731 414.07337 417.38679 424.27113 429.03718 436.76606 448.47389 454.20613 457.90596 461.21937 464.91206 469.82133 473.1347 476.4982 482.23048 485.54389 491.61958 499.34846 511.05628 518.75656 523.8662 527.22976 532.962 540.25436 547.9546 551.268 558.9969 563.4696 566.783 571.69229 579.3925">of a predicate and atoms. It is comprised of the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 4.1647799 11.8936619 15.257156 18.620652 26.292237 36.769166 40.13266 47.832918">following</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="58.04506 64.92938 69.63097 74.54024 79.64989 83.01338 90.71364 98.413898 103.1656 110.45795">attributes</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 184.65039)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="116.1902">:</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 101.01399 106.09502 111.304859 114.90451 122.76936 129.7182 133.0316 140.89646 145.94158 153.3198 161.18465 164.7843 170.83136 177.93038 182.83235">private String predicate</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="190.21057 193.86748 197.18088 202.09015 209.7904 213.1539 218.88616 222.19956 229.89981 235.00946 238.37296 244.77774 251.66207 256.41377 263.70613 267.01954 273.90388 278.60548 283.51475 288.6244 291.98789 299.68815 307.3884 312.1401 319.43244 322.74586 327.6621 334.95448 342.65473 347.57099 354.86335 360.59559 367.88795 375.45213 380.3614">, this private attribute represents</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 200.09375)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="389.40699 394.31626 402.0165 409.30885 412.62226 420.3225 425.23878 432.53114 440.23139 443.59489 449.67054 456.55488 461.30659 468.59895 472.25587 475.56929 483.29817 488.4078 491.7212 496.63047 504.33073 511.62306 514.93649 522.6367 529.6571 541.3649 548.6573 552.3142 555.6276 563.3565 567.8292 571.14266">the predicate, or the name, of a</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 215.53516)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.57144 60.444749 68.17363 71.537128 79.26601 86.16475 89.47815 93.66441 100.684818 106.88223 111.791507 115.104907 119.54901 126.841358 130.69875 137.59749 141.29734 144.61074 149.52 152.8835 157.79277 161.15627 168.44861 171.76201 179.49089 184.60054 187.91394 195.6142 202.49852 207.25023 214.54257 221.84207 229.57096 234.04369 241.34319 249.04344 252.40694 257.5166 262.42588 270.12614 273.78303 277.09645 284.11683 291.81709 299.51734 302.83076 308.563 316.29188 319.6053 327.33418 335.03443 339.47853">Prolog fact (e.g. title or date_of_birth, and so on).</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 240.97657)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 240.97657)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 101.01399 106.09502 111.304859 114.90451 122.76936 129.7182 134.47719 139.23618 142.54958 149.64859 154.58638 162.46555 174.38806">private String[] atoms</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 240.97657)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="180.23482 183.89173 187.20513 192.1144 199.81465 203.17815 208.9104 212.2238 215.5873 218.95079 224.51833 229.4276 232.741 238.81667 246.54555 254.10973 258.83998 265.86036 269.22386 276.9241 282.65638 285.9698 290.87907 298.5793 305.87165 309.18507 316.0694 320.83546 328.56434 340.27217">, this list contains the atoms</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 240.97657)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="349.31776 357.04664 361.51936 364.83277 369.74205 377.4423 384.73463 388.04804 394.12373 401.8526 406.96226 411.87855 419.1709 424.90315 432.6034 440.33229 448.03254 455.7328 459.09629 466.79655 473.69529 477.00868 484.5801 489.45344 497.1823 500.5458 508.2747 515.17349 518.4869 526.18716 531.1034 538.39578 546.096 549.4595 555.53518 562.4195 567.1712">of the corresponding Prolog predicate</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 256.41993)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 52.444108 59.73645 63.59384 70.492588 74.19243 77.50583 81.67061 89.39949 94.50914 97.82254 102.73181 110.43207 117.72441 121.03781 128.73807 133.65435 140.94669 148.64694 152.01044 158.0861 164.97043 169.72214 177.01448 180.32788 188.02814 194.91246 199.66417 206.95652 214.25601 221.9849 226.45763 233.75713 241.45738 244.82088 249.93053 254.8398 262.54005 265.85346 270.76274 278.46299 285.7553 289.06874 296.76899 301.68525 308.9776 316.67787 320.04136 326.117 333.00135 337.75306 345.0454">(e.g. for the predicate date_of_birth the predicates</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 256.41993)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="354.09107 360.16676 367.18714 374.8874 378.2008 385.90107 393.19343 396.50685 400.16377 407.864 411.2275 414.591 417.9545 421.26789 427.89448 434.7788 439.53053 446.82289 452.5551 456.21205 459.52546 466.54585 474.2461 481.94636 485.25978 488.7591 498.46315 504.66056 509.42658 517.15548 524.8557 532.1481 537.2577 540.5711 547.9994 555.42776">can be &#x2018;bill gates&#x2019; and &#x2018;October 28,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 271.85939)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.428316 62.85663 70.28494 77.71326 81.37016 85.81427 89.514118 92.827518 99.969577 107.66983 111.033329 116.76558 120.07898 123.442478 126.80597 132.3735 137.28278 140.59618 143.95967 149.69193 153.00533 160.70558 166.43784 174.13809 181.1585 184.52199 187.88549 194.51944 197.83284 203.90851 211.63739 223.34522 231.04547 238.77436 244.5066 251.79895 259.4992 262.81263 270.5415 275.01423 278.32765 286.05653 293.75679 301.04914 304.36253 312.0914 317.20106 320.51445 325.4237 335.76457">1955&#x2019;). This list is usually composed of one or two</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 271.85939)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="346.80683 353.69117 358.4572 366.1861 377.89393 383.62617 386.93959 393.95997 399.6922 403.0056 407.1704 414.8993 420.00895 423.32234 428.2316 435.93186 443.22419 446.5376 452.61329 460.34217 468.04243 473.77467 477.13816 484.8384 492.13075 497.047 504.33937 512.0396 515.353 522.0156 529.7159 537.38748 547.8644 551.2279 558.52029 566.2205 572.9975">atoms as for the considered knowledge</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 287.30274)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.700258 62.720659 68.45291 75.745258 79.40216 82.71556 90.41582 98.11607 103.025348 106.338748 111.24802 118.94827 126.240619 131.15689 138.44924 141.76264 145.12613 150.85839 154.17179 161.87204 169.60092 172.91432 178.64658 186.34683 193.63918 199.8366 203.20009 207.67282 211.03632 217.23374 220.54714 223.91063 227.27413 238.98195 242.34545 247.25472 250.56812 258.297 265.99726 269.31068 274.21995 281.9202 285.2837 291.01594">base, but there is no specific limit on this.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 312.74415)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 8.480301 16.180558 23.880814 27.194214 32.103487 39.80374 47.096086 50.409486 62.11731 69.33087 74.24014 81.9404 89.66928 97.36954 103.10179 106.41519 113.43559 118.35187 125.64421">And the methods are:</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 328.1875)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 328.1875)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 94.56622 101.801319 107.934329 113.01535 117.581119 124.508487 129.58951 134.79935 138.399 146.26386 153.21269 156.5261 164.39095 169.43607 176.81429 184.67914 188.2788 194.32585 201.42487 206.32685 213.70507 217.48363 220.79703 227.7244 232.80542 238.01526 241.61492 249.47977 256.4286 261.18757 265.94654 269.25996 276.35896 281.29676 289.1759 301.09843 306.9452">public Fact(String predicate, String[] atoms)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 328.1875)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="311.511 315.1679 318.48133 323.3906 331.09086 334.45436">, this</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 328.1875)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="343.49998 355.2078 362.42137 367.33064 375.03089 382.75978 390.46003 393.77345 397.13694 402.8692 406.18263 411.0919 418.79216 426.08448 429.3979 435.47358 443.20246 450.9027 456.47026 461.37953 466.48918 474.18943 480.38685 485.1529 492.88179 497.99143 501.3048 505.4696 513.1985 518.3081 521.6215 526.53079 534.231 537.5945 543.3267 546.64016 552.8375 556.20108 563.22146 568.9537 574.6859 577.9993 585.0197 592.72">method is the constructor for this class and</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 343.6289)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 56.272768 59.586168 63.09279 70.793048 76.36058 81.26985 84.58325 90.315509 97.52907 102.43834 108.17059 111.48399 116.393268 124.09352 131.38587 134.69927 141.58359 146.28517 151.19445 156.3041 159.66759 167.36785 175.0681 179.81981 187.11215 192.8444 196.1578 203.88669 208.35942 211.67282 216.58209 224.28235 231.57469 234.88809 241.08551 244.449 251.4694 257.20167 262.9339 266.2473 271.01338 278.74226 282.05567 286.96495 294.6652 301.95753 305.27095 312.99983 320.70008 327.9924">it just sets the attributes of the class to the ones</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 343.6289)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="337.03804 344.73829 351.75868 357.4909 363.22315 370.5155 378.21577 381.52919 384.89268 392.59294 395.9063 399.2698 406.97007 414.67033 422.37059 427.27986">passed in input.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 369.0703)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 369.0703)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.16765 100.24867 105.45851 109.05817 116.92302 123.87186 127.18526 133.97653 141.25449 146.33551 154.13596 159.18108 166.5593 174.42415 178.0238 184.07086 191.16988 196.07186 203.45008 208.01584">public String getPredicate()</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 369.0703)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="212.5816 216.23851 219.55191 226.3289 233.54247 238.45174 241.76514 253.47296 260.68653 265.5958 273.29606 281.02494 288.7252 292.03858 296.20338 303.93226 309.0419 312.3553 317.26457 324.9648 332.25715 335.57057 343.2708 348.18708 355.47944 363.1797 366.54319 372.61885 379.50318 384.25489">, get method for the predicate</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 369.0703)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="394.86067 401.745 406.4466 411.35588 416.4655 419.829 427.52928 435.22953 439.98124 447.27357 450.93049 454.2439 459.16017 466.37373 471.283 478.98326 484.0929 491.79316 497.5254 500.8388 505.74809 513.44839 520.7407 524.05416 531.7544 536.67068 543.963 551.66329 555.02676 561.1024 567.98678 572.73849">attribute, returns the predicate</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 384.51173)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.734148 59.643419 64.75307 68.11656 75.81682 82.71556">String.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 409.95314)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 409.95314)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.03873 102.91789 106.51755 114.3824 117.6958 123.54256 130.82051 135.90154 143.70198 148.7471 156.12532 163.99018 167.58983 173.63689 180.7359 185.63788 193.0161 197.58187 204.50923 209.59026 214.8001 218.39975 226.2646 233.21344 236.52684 244.3917 249.43682 256.81504 264.67988 268.27955 274.3266 281.4256 286.32759 293.7058">public void setPredicate(String predicate)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 409.95314)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="298.27159 301.92848 305.24189 310.97413 318.18769 323.09696 326.41035 338.11817 345.33174 350.241 357.94126 365.67015">, set method</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 409.95314)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="376.68385 380.84864 388.5775 393.68717 397.00056 401.90983 409.61009 416.9024 420.21583 427.91609 432.83235 440.1247 447.82496 451.18846 457.2641 464.14845 468.90016 476.1925 479.50593 486.39027 491.09187 496.00114 501.11079 504.47428 512.17459 519.8748 524.6265">for the predicate attribute</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 435.39454)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 435.39454)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.16765 100.24867 105.45851 109.05817 116.92302 123.87186 127.18526 133.97653 141.25449 146.33551 154.13596 159.18108 166.5593 174.42415 178.0238 184.07086 191.16988 196.07186 203.45008 208.01584">public String getPredicate()</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 435.39454)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="212.5816">,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 435.39454)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="219.55191 226.3289 233.54247 238.45174 241.76514 253.47296 260.68653 265.5958 273.29606 281.02494 288.7252 292.03858 296.20338 303.93226 309.0419 312.3553 317.26457 324.9648 332.25715 335.57057 342.4549 347.22096 354.94984 366.65766">get method for the atoms</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 435.39454)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="375.7033 382.58766 387.28926 392.19853 397.30818 400.67167 408.37193 416.07218 420.82389 428.1162 431.77314 435.08656 440.0028 447.21638 452.12565 459.8259 464.93556 472.6358 478.36805 481.68147 486.59074 494.291 501.5833 504.89674 508.26023 511.62373 517.1913 522.1006 525.414 533.1429 537.6156 540.929 547.81338 552.5794 560.3083">attribute, returns the list of atom</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 450.8379)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.734148 59.643419 64.75307 68.11656 75.81682 82.71556 88.447818">Strings.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 476.2793)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 476.2793)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.03873 102.91789 106.51755 114.3824 117.6958 123.54256 130.82051 135.90154 144.3314 149.2692 157.14836 169.07088 174.91764 179.4834 186.41077 191.49179 196.70163 200.30129 208.16614 215.11498 219.87397 224.63295 227.94635 235.04537 239.98316 247.86232 259.78486 265.6316">public void setAtoms(String[] atoms)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 476.2793)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="270.19737 273.85426 277.16767 282.8999 290.11347 295.02275 298.33613 310.04396 317.2575 322.16679 329.86705 337.59593 345.29618 348.60957 352.77436 360.50325">, set method for</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 476.2793)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="368.92634 373.8356 381.53587 388.8282 392.1416 399.02595 403.792 411.52088 423.2287 428.96095 432.27436 439.1587 443.8603 448.76957 453.8792 457.2427 464.94297 472.64323 477.39494">the atoms attribute</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 501.72267)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 501.72267)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 61.167726 71.0793 77.87775 85.25597 90.465808 95.675647 99.2753 107.14015 114.51837 117.83177 125.696628 133.56148 141.42633 145.02599 148.62564 154.75865 158.07205 164.99942 170.08045 175.29029 178.88994 186.75479 193.70363 197.01703 201.95482 209.83399 216.76136 221.84238 227.05222 230.65187 238.51673 245.46556 250.03133">@Override public String toString()</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 501.72267)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="254.59709 258.254 261.56739 266.47666 274.1769 277.5404 283.27265 286.58607 298.29389 305.50746 310.41673 318.11698 325.84587 333.5461 336.8595 344.52394 351.00035 358.29267 363.4023 368.51197 371.87547 379.5757 386.86805">, this method overrides</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 501.72267)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="395.91377 400.82304 408.5233 415.8156 419.12904 423.89509 431.62397 438.3581 443.26737 448.377 451.7405 459.44078 466.3395 469.6529 481.36073 488.57429 493.48356 501.1838 508.9127 516.6129 519.92636 527.6552 532.1279 535.44137 540.3506 548.05087 555.3432 558.6566 568.36068 576.0609 579.5675 586.85989 593.05728">the toString method of the Object</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 517.16409)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.19742 57.560914 64.581317 70.31357 76.04582 79.74567 83.05907 86.751758 91.661029 94.97443 98.33792 104.070178 107.383579 115.08383 120.816089 128.10843 135.80869 139.12209 143.28687 151.01575 156.1254 159.4388 164.1905 171.48285 177.05039 181.95966 185.27306 192.97332 200.67357 205.78322 213.48348 221.21236 226.94461 234.23696 239.96921">class. It is used for test purposes.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 542.60549)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 542.60549)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 63.729707 71.59456 75.194217 78.79387 84.92688 88.24028 95.16765 100.24867 105.45851 109.05817 116.92302 123.87186 127.18526 135.05011 140.0809 147.96007 151.55973 159.43889 166.38773 172.71367 179.94876 186.08177 191.1628 197.00955 201.57532">public String prologFacts()</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 542.60549)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="206.14109 209.79799 213.11139 218.02066 225.72092 229.08441 234.81667 238.13007 249.83789 257.05146 261.96073 269.66099 277.38987 285.09013 288.4035 294.60093 299.5172 306.80958 313.6939 318.44563 325.73799 331.4702 334.78364">, this method creates a</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 542.60549)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="345.11738 351.8515 356.76078 361.87043 365.23393 372.93418 379.83293 383.1463 386.5098 394.21006 397.52345 402.4327 410.13298 417.4253 420.7387 424.9035 432.6324 437.74205 449.44987 456.33418 461.24345 464.55683 472.2857 476.75843 480.07185 487.09223 490.40565 497.97709 502.8504 510.57929 513.94277 521.67166 528.5704 531.8838 536.07009 543.09048 549.28787 554.19717 557.85409 561.1675 565.6402 570.5135 578.2424">String in the format of a Prolog fact, from</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 558.0469)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 52.90927 60.609529 67.90187 71.21527 77.41269 80.776187 87.796588 93.52884 99.26109 102.57449 109.45882 114.1604 119.06967 124.17932 127.542819 135.24308 142.94333 147.69504 154.98738 160.71964 164.41948 167.73288 174.2665 181.99538 187.10503 190.41843 197.48876 203.57147 210.59188 222.2997 229.99996 233.36345 240.65579 244.3127 247.6261 254.52484 257.88835 264.36476 271.6571 279.35737 282.67079 290.37104 295.2873 302.57966 310.2799 313.6434 319.7191 326.60337 331.35508 338.64744 345.94694 348.5654 356.26567 363.15 367.9017 375.19404 382.49354 390.2224 394.69517 401.99467 409.69493 413.0584 418.16807 423.07734 430.7776">the class attributes. For example, given predicate=&#x2019;date_of_birth&#x2019;</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 558.0469)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="437.74787 444.76826 452.4685 460.16877 463.48219 470.36653 475.13258 482.86146 494.56929 500.3015 507.601 512.0952 515.75216 523.4524 526.8159 530.17947 533.54299 536.8564 543.483 550.3673 555.119 562.4114 568.1436 570.38259">and atoms=[&#x2018;bill gates&#x2019;,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 573.4883)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.499345 61.203386 67.4008 72.16684 79.89572 87.59598 94.88832 99.99797 103.31137 110.739688 118.168 121.824909 125.138309 132.56662 139.99494 147.42325 154.85157 158.50847 163.00267 166.65958 169.97298 173.33647 178.24575 181.55915 186.47542 193.68898 198.59825 206.29851 211.40816 219.10842 224.84067 228.15407 233.06334 240.7636 248.05594 251.36934 256.9369 261.84617 266.9558 270.3193 278.01957 284.9183 288.2317 295.93196 302.81629 307.568 314.86033 322.15983 329.8887 334.36146 341.66096 349.3612 352.7247 357.83436 362.74363 370.44389 374.888 378.54493 386.24519 389.60868 392.97218">&#x2018;October 28, 1955&#x2019;], it returns the string date_of_birth(&#x2018;bill</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 573.4883)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="399.64903 406.27565 413.15998 417.91169 425.20405 430.93629 433.1752 436.8321 440.1455 443.64485 453.34889 459.5463 464.31233 472.0412 479.74147 487.0338 492.14347 495.45686 502.88517 510.31349 513.9704 517.2838 524.71218 532.1405 539.56887 546.9972 550.6541 555.0982 558.79806 562.11148 565.80416 570.27688 573.5903 580.61068">gates&#x2019;, &#x2018;October 28, 1955&#x2019;). If an</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 588.93167)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.884325 59.65036 67.37924 79.08707 82.40047 85.76396 91.496219 94.809619 100.885288 108.61417 120.32199 128.02225 135.75113 141.48339 148.77573 156.47599 159.78939 167.51827 175.21852 178.58202 185.21598 188.52938 196.158 202.79196 206.10536 213.80562 221.50588 233.2137 240.91396 248.2063 253.06529 258.79756 262.45448 265.76789 269.13139 274.04066 277.35408 284.13105 291.3446 296.25389 301.98616 305.29957 311.37525 319.10414 326.56086 333.0373 340.32963 345.43928 350.19099 357.48335">atom is composed only by numbers, it gets converted</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 588.93167)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="368.49693 372.96968 377.84297 385.57185 397.27967 400.59309 407.61347 410.92689 417.661 422.57029 427.67994 431.04344 438.74369 445.64244 448.9558 453.72187 461.45075 464.76417 471.78456 479.4848 482.79823 486.1617 493.7259 498.4776 505.76997 512.54696 519.8393 524.949 528.2624 532.7065 539.99887 543.8562 550.75497 554.4548 557.7682 561.933 569.66189 574.7715 578.0849">from a String to an integer (e.g. for a</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 604.37307)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 54.45491 61.747255 68.767658 73.877307 77.190708 80.84761 88.275928 95.70424 103.13255 110.56087 114.21777 117.53117 122.01822 129.31772 132.63112 140.05944 147.48775 154.91606 162.34438 166.78849">year &#x2018;1995&#x2019; -&#x003e; 1995).</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 629.8164)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 629.8164)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 99.76866 104.70645 111.805469 116.88649 120.486148 126.619159 129.93256 137.79741 145.67658 153.55574 157.1554 164.53362 171.7687 179.63356 182.94696 186.54662 192.39337 202.04732 209.91217 221.83469 229.2129 234.42275 238.0224 244.15541 248.72118 255.64855 260.72956 265.9394 269.53907 277.40394 284.35279 287.6662 293.34825 298.42927 303.6391 313.29304 321.15788 333.08039">private static boolean isNumeric(String strNum)</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 629.8164)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="337.64613 341.5678 344.88124 349.7905 357.49076 360.85426">; this</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 629.8164)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="369.8999 381.60774 388.8213 393.73057 401.43083 409.1597 416.85997 420.17335 426.37077 434.071 441.36335 447.56077 454.08729 459.81953 463.13294 466.49644 470.96919 474.2826 479.19187 486.89213 494.18446 497.49787 504.232 509.14128 514.2509 517.6144 525.31466 532.2134 535.5268 542.42556 545.78909 552.2655 559.55789 567.2581 570.57156 573.93508">method checks if the String given in</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 645.25588)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 51.363496 59.06375 66.76401 74.464267 79.373538 82.686939 86.05043 91.782688 95.096088 102.116489 105.429889 113.13014 120.8304 132.53823 140.23848 147.53083 151.38005 155.03696 158.35036 161.71385 166.18659 169.49999 172.86348 177.77275 181.08615 184.44965 190.1819 193.8388 197.1522 202.06848 209.28205 214.19132 221.89157 227.00122 234.70148 240.43373 243.74713 248.6564 253.76605 261.4663 268.75868 272.4156 275.729 279.91529 286.93568 290.29917 296.03144 303.3238 306.6372 314.3661 319.27537 326.97563 334.26799 339.4564 349.93333 353.2968 359.02909 366.32145">input is a number, if it is, returns true, false otherwise.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 686.1406)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="0 8.015137 17.669083 27.401612 40.683839 46.881258 54.03047 63.26935 72.60841 79.75763 83.07103 92.410099 100.66139 109.54245 117.342899">KNOWLEDGE GRAPH</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 701.58206)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 7.1420595 14.842316 18.20581 23.938065 27.251465 33.448884 36.812379 43.83278 49.565034 55.297288 58.610689 63.34091 70.36131 76.55122 83.84357 89.57582 92.88922 98.96489 105.98529 110.901569 118.19391 121.50731 129.23619 133.70893 137.02233 141.9316 149.63185 156.9242 160.2376 166.31327 174.04215 181.7424 189.44266 196.735 202.93242 207.84169 211.20519 218.93407 226.63433 229.94773 240.42465 243.78815 248.69742 256.39768 259.71107 264.62034 272.3206 279.6129 282.92634 292.38706 299.67939 307.40827 314.83659">This class takes care of the connection with the Neo4J</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 701.58206)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="322.82313 331.84016 339.81236 352.34315 359.07728 362.7342 366.0476 373.74787 380.76826 388.4685 396.16877 399.53227 402.89576 410.596 417.49476 420.80818 428.50843 435.39277 440.123 447.14338 450.4568 453.82029 461.52055 467.2528 474.54518 479.65483 484.5641 490.29634 493.60975 500.63014 508.33039 516.03067 519.34408 526.41439 532.7621 540.46237 548.1912 553.3009 558.2102 563.94247 567.25588 571.7286 576.60189 584.33078">DBMS, handling data inserts and exports from</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 717.0254)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="0 4.9092714 12.609528 19.90187 23.215271 30.114014 34.922868 41.943269 49.643526 57.34378 61.043626 64.357028 68.04971 72.958988 76.272388 83.97264 90.99304 96.725299 100.0387 104.94797 112.648227 119.94057 123.25397 127.41875 135.14763 138.51113 141.87462 149.5462 160.02313 163.38663 171.08689">the graph. It has the following</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 717.0254)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="181.29903 188.18335 192.88494 197.7942 202.90386 206.26735 213.9676 221.66786 226.41957 233.71192">attributes</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 717.0254)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="239.44417">:</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 732.46487)" font-size="14.666667" font-family="ArialMT"><tspan y="14.2369799" x="24">-</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 732.46487)" font-size="14.666667" font-family="Calibri" font-weight="bold"><tspan y="14.2369799" x="48 55.864854 61.07469 64.67435 71.39401 78.49303 83.395008 90.773227 94.086627 103.3255 108.53534 112.134998 118.93344 126.31166 131.5215 134.8349 142.69976 147.90959 151.50925 158.3077 165.68592 170.89575 180.5497 187.92792 195.80709 203.2354">private Driver driverNeo4J</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 732.46487)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="208.08742 211.74433 215.05773 218.42122 223.33049 226.64389 230.00739 235.73964 239.05304 243.96231 251.66257 258.9549 262.2683 269.96858 275.07823 278.4417 284.91813 292.21046 297.3201 300.63349 308.33375 314.06599 321.35835">, it is the driver used</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 732.46487)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="332.372 336.5368 344.2657 349.37535 352.68873 357.598 365.29826 372.59059 375.904 381.97969 389.70857 397.4088 405.10908 412.40144 418.59886 423.50813 426.8716 434.6005 442.30076 445.61415 456.09107 459.45457 464.36384 472.0641 475.3775 480.28678 487.98704 495.27937 498.59278 506.29304 513.5854 521.3143 528.74258 533.41567 536.72909 545.7461 553.71829 566.2491 572.9832">for the connection with the neo4J DBMS.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 747.9082)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="48 55.14206 62.842317 70.13466 73.44806 78.35733 84.99129 92.69154 99.98389 103.29729 112.314319 117.423969 120.78746 127.26387 134.55622 139.66587 142.97927 146.34276 152.07501 155.38842 159.86115 164.73445 172.46334 184.17116 187.48456 192.39383 200.09409 207.38643 210.69983 218.40009 225.69243 233.42131 240.84963 245.52274 248.83614 256.53639 261.64604 265.00953 271.48594 278.77827 283.8879 287.2013 290.5648 293.92829 301.62855 306.43739 313.45777 318.63905 324.30616">The type Driver is from the neo4J driver library.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 747.9082)" font-size="14.666667" font-family="Calibri"><tspan y="14.2369799" x="331.3195 335.01219 339.92146 343.23487 346.59837 352.33064 355.64405 360.5533 368.25358 373.1269 380.85578 388.55604 395.45478 403.15504 406.46846 411.37773 419.07798 422.44148 428.1737 431.48713 439.216 446.91627 450.42289 457.7152 463.91264 468.8219 472.1353 477.0446 484.74485 491.62916 496.53843 499.8518 506.8722 510.2357 513.5992 516.9126 526.3733 533.66567 541.39456 548.8229">It is through this object that all Neo4j</tspan></text>
</g>
<clipPath id="cp89">
<path d="M 0 0 L 595.5 0 L 595.5 842.25 L 0 842.25 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp89)">
<path transform="matrix(.75,0,0,.75,72,184.65039)" stroke-width="1.3333334" stroke-linecap="butt" stroke-miterlimit="10" stroke-linejoin="miter" fill="none" stroke="#000000" d="M 58.666669 15.798177 L 116 15.798177 "/>
<path transform="matrix(.75,0,0,.75,72,312.74415)" stroke-width="1.3333334" stroke-linecap="butt" stroke-miterlimit="10" stroke-linejoin="miter" fill="none" stroke="#000000" d="M 0 15.673828 L 129.33333 15.673828 "/>
<path transform="matrix(.75,0,0,.75,72,717.0254)" stroke-width="1.3333334" stroke-linecap="butt" stroke-miterlimit="10" stroke-linejoin="miter" fill="none" stroke="#000000" d="M 181.33333 15.300781 L 240 15.300781 "/>
</g>
</g>
</svg>
